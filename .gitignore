# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
test-results/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# VS Code
.vscode/
*.code-workspace

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.
#  For PyCharm Community Edition, use 'PyCharm CE'
.idea/

# Sublime Text
*.sublime-project
*.sublime-workspace

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~

# Temporary files
*.tmp
*.temp
temp/
tmp/

# Log files
*.log
logs/

# Dataset files (uncomment if you don't want to track large datasets)
dataset/
*.pdf
*.csv
*.json
*.txt
*.xlsx
*.xls
*.txt 
*.docx

# Model files and weights
*.pkl
*.joblib
*.h5
*.hdf5
*.ckpt
*.pb
*.pth
*.pt
*.onnx
models/
checkpoints/
weights/

# LangChain specific
.langchain/
langchain_cache/

# Hugging Face cache
.cache/huggingface/

# API keys and secrets
.env.local
.env.development.local
.env.test.local
.env.production.local
secrets.json
config.json
api_keys.txt

# Output directories
output/
results/
predictions/
generated/

# Backup files
*.bak
*.backup
*~

# IDE and editor files
*.swp
*.swo
*~

# OS generated files
.DS_Store?
Icon?
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Project specific
commands_run_install.txt
*.pyc
*.pyo
*.pyd

# Jupyter notebook outputs
*.ipynb

# Data processing outputs
processed_data/
cleaned_data/
extracted_text/

# Cache directories
.cache/
__pycache__/
.pytest_cache/

# Virtual environment variations
.virtualenv
virtualenv/
.conda/
conda-meta/

# Development and testing artifacts
.coverage
.tox
.nox
htmlcov/
.pytest_cache/
test_output/
debug_output/

# Package manager files
poetry.lock
Pipfile.lock
requirements-dev.txt

env.yaml